// to control and manage tasks
    class TaskManager{   
        // create memeber and modify list to store all tasks that will create 
        private List<Task> tasks;
        private string description;

        // constructor, to initialize list
        public TaskManager(){ 
            tasks =  new List<Task>();
            description = " ";
        }

        // Function to add new task and store it in list
        public void AddTask(string description){
            // add new task and make statu by default is pending 
            // 1.create object 
            Task task = new Task(description, Taskstatus.Pending);
            // 2.add new object in list
            tasks.Add(task);
            Console.WriteLine("Task added successfully!");

        }


        // function to display all tasks from list
        public void DisplayList(){
            if (tasks.Count == 0){
                Console.WriteLine("No tasks available");
            }else {
            Console.WriteLine("Tasks:");
            foreach (var task in tasks){
                Console.WriteLine($"- {task.Description} [{task.Status}]");
            }
            }
        }

        
        bool found = false;
        // function to change status of task 
        // allow user to enter description of task and search of it to change of statu 
        public void Change_Statu(string descr){

            // instance to check key 
            ConsoleKeyInfo keyInfo = Console.ReadKey(true);
           
            foreach (var task in tasks){
                // search task that user want to change it
                if (task.Description == descr){
                    Console.WriteLine("To make task completed press 1 and to make it in progress press 2.\n"); 
                    found = true;
                    // ask user wich statu want to change it 

                    // when press 1 make statue = completed 
                    if (keyInfo.Key == ConsoleKey.D1 || keyInfo.Key == ConsoleKey.NumPad1){
                        task.Status = Taskstatus.Completed;
                        Console.WriteLine("Done\n");
                    // when press 2 make statue = in progress
                    }else if (keyInfo.Key == ConsoleKey.D1 || keyInfo.Key == ConsoleKey.NumPad2){
                        task.Status = Taskstatus.InProgress;
                        Console.WriteLine("Done\n");
                    // when press another key print error message  
                    }else {
                        Console.WriteLine("Try Again.\n");
                    }
                    
               // when task not in list
                }else{
                   Console.WriteLine("please try agian, task not in list.\n");
                }
            }
            
            found = false;

        }
       

public void DeleteTask(string desc)
{
    // Use RemoveAll method with a predicate to remove all tasks matching the description
    int initialCount = tasks.Count;
    tasks.RemoveAll(task => task.Description.Equals(desc, StringComparison.OrdinalIgnoreCase));

    // Check if any tasks were removed
    int removedCount = initialCount - tasks.Count;
    if (removedCount > 0)
    {
        // Inform the user that tasks have been deleted
        Console.WriteLine($"{removedCount} task(s) with description '{desc}' deleted successfully.");
    }
    else
    {
        // If no tasks were removed
        Console.WriteLine($"No task found with description '{desc}'.");
    }
}



    }   // end of TaskManager class